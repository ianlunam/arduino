#include <Arduino.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>

#include "Display.h"

#define SCREEN_WIDTH 128  // OLED display width, in pixels
#define SCREEN_HEIGHT 64  // OLED display height, in pixels

#define OLED_RESET -1        // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C  ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define I2C_SDA 4
#define I2C_SCL 15

#define LOGO_HEIGHT 128
#define LOGO_WIDTH 64

// 'Penguin2', 128x64px
const unsigned char penguin_bitmap[] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x78, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x10, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xfc, 0x10, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xfe, 0x10, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0x10, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xb8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7e, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};


// '1', 30x40px
const unsigned char bitmap_1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
	0x00, 0x03, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x01, 0xff, 0xf0, 0x00, 
	0x03, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '2', 30x40px
const unsigned char bitmap_2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x01, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xc7, 0xff, 0x00, 0x07, 0x01, 0xff, 0x00, 
	0x06, 0x00, 0xff, 0x00, 0x04, 0x00, 0xff, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x7f, 0x00, 
	0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfc, 0x00, 
	0x00, 0x00, 0xf8, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x03, 0xe0, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 
	0x00, 0x1c, 0x00, 0xc0, 0x00, 0x38, 0x00, 0xc0, 0x00, 0x70, 0x03, 0x80, 0x00, 0xff, 0xff, 0x80, 
	0x01, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '3', 30x40px
const unsigned char bitmap_3 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xf8, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0xff, 0xff, 0x00, 
	0x01, 0xe3, 0xff, 0x80, 0x01, 0x80, 0xff, 0x80, 0x03, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x7f, 0x80, 
	0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xf8, 0x00, 
	0x00, 0x01, 0xfc, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x0f, 0xff, 0x80, 
	0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x1f, 0xc0, 
	0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x0f, 0xc0, 
	0x00, 0x00, 0x0f, 0xc0, 0x03, 0xc0, 0x0f, 0x80, 0x07, 0xe0, 0x0f, 0x80, 0x07, 0xf8, 0x1f, 0x00, 
	0x07, 0xfe, 0x3e, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xf0, 0x00, 
	0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '4', 30x40px
const unsigned char bitmap_4 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x7e, 0x00, 
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x03, 0xfe, 0x00, 
	0x00, 0x07, 0xfe, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x0e, 0xfe, 0x00, 0x00, 0x1c, 0xfe, 0x00, 
	0x00, 0x38, 0xfe, 0x00, 0x00, 0x38, 0xfe, 0x00, 0x00, 0x70, 0xfe, 0x00, 0x00, 0xe0, 0xfe, 0x00, 
	0x01, 0xc0, 0xfe, 0x00, 0x01, 0xc0, 0xfe, 0x00, 0x03, 0x80, 0xfe, 0x00, 0x07, 0x00, 0xfe, 0x00, 
	0x0e, 0x00, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 
	0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x00, 
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x00, 
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '5', 30x40px
const unsigned char bitmap_5 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0x80, 0x00, 0x7f, 0xff, 0x80, 
	0x00, 0x7f, 0xff, 0x80, 0x00, 0xff, 0xff, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 
	0x01, 0xc0, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xf0, 0x00, 
	0x03, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0x80, 
	0x00, 0x3f, 0xff, 0x80, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xc0, 
	0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x07, 0xc0, 
	0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x07, 0xc0, 0x03, 0xc0, 0x07, 0x80, 0x07, 0xe0, 0x07, 0x80, 
	0x07, 0xf8, 0x07, 0x00, 0x07, 0xfc, 0x0e, 0x00, 0x07, 0xff, 0x3c, 0x00, 0x03, 0xff, 0xf0, 0x00, 
	0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '6', 30x40px
const unsigned char bitmap_6 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0xff, 0x80, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x07, 0xe0, 0x00, 
	0x00, 0x1f, 0xc0, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 
	0x01, 0xfc, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 
	0x07, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x0f, 0xff, 0xfc, 0x00, 0x0f, 0xf9, 0xfe, 0x00, 
	0x0f, 0xf0, 0xff, 0x00, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x3f, 0x80, 
	0x0f, 0xf0, 0x3f, 0xc0, 0x0f, 0xf0, 0x3f, 0xc0, 0x0f, 0xf0, 0x3f, 0xc0, 0x0f, 0xf0, 0x3f, 0xc0, 
	0x0f, 0xf0, 0x3f, 0x80, 0x0f, 0xf0, 0x3f, 0x80, 0x07, 0xf0, 0x3f, 0x80, 0x07, 0xf8, 0x3f, 0x00, 
	0x03, 0xf8, 0x3f, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x00, 0xfe, 0xfc, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '7', 30x40px
const unsigned char bitmap_7 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0x00, 0x0f, 0xc0, 0x1f, 0x00, 0x0e, 0x00, 0x1f, 0x00, 
	0x0c, 0x00, 0x1e, 0x00, 0x08, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3c, 0x00, 
	0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xf8, 0x00, 
	0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x01, 0xf0, 0x00, 
	0x00, 0x01, 0xe0, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x00, 
	0x00, 0x07, 0xc0, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x0f, 0x80, 0x00, 
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 
	0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '8', 30x40px
const unsigned char bitmap_8 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x01, 0xf8, 0xfe, 0x00, 0x03, 0xf0, 0x3f, 0x00, 
	0x07, 0xe0, 0x3f, 0x00, 0x07, 0xe0, 0x3f, 0x80, 0x0f, 0xe0, 0x1f, 0x80, 0x0f, 0xf0, 0x1f, 0x80, 
	0x0f, 0xf0, 0x1f, 0x80, 0x0f, 0xf8, 0x1f, 0x80, 0x0f, 0xfc, 0x3f, 0x00, 0x07, 0xfe, 0x3e, 0x00, 
	0x07, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xf8, 0x00, 
	0x00, 0x3f, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x01, 0xff, 0xff, 0x00, 0x03, 0xe3, 0xff, 0x00, 
	0x07, 0xe1, 0xff, 0x80, 0x0f, 0xe0, 0xff, 0x80, 0x0f, 0xc0, 0x7f, 0x80, 0x0f, 0xc0, 0x3f, 0xc0, 
	0x0f, 0xc0, 0x3f, 0x80, 0x0f, 0xc0, 0x3f, 0x80, 0x0f, 0xc0, 0x3f, 0x80, 0x0f, 0xe0, 0x3f, 0x80, 
	0x0f, 0xe0, 0x3f, 0x00, 0x07, 0xf0, 0x7e, 0x00, 0x03, 0xf8, 0xfc, 0x00, 0x01, 0xff, 0xf8, 0x00, 
	0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '9', 30x40px
const unsigned char bitmap_9 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0xfd, 0xfc, 0x00, 0x01, 0xf8, 0x7e, 0x00, 
	0x03, 0xf0, 0x7f, 0x00, 0x03, 0xf0, 0x3f, 0x80, 0x07, 0xf0, 0x3f, 0x80, 0x07, 0xf0, 0x3f, 0xc0, 
	0x07, 0xf0, 0x3f, 0xc0, 0x0f, 0xf0, 0x3f, 0xc0, 0x0f, 0xf0, 0x3f, 0xc0, 0x0f, 0xf0, 0x3f, 0xc0, 
	0x0f, 0xf0, 0x1f, 0xc0, 0x07, 0xf0, 0x3f, 0xc0, 0x07, 0xf8, 0x3f, 0xc0, 0x07, 0xf8, 0x3f, 0xc0, 
	0x03, 0xfc, 0x3f, 0xc0, 0x01, 0xfe, 0x7f, 0xc0, 0x00, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0x80, 
	0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xfe, 0x00, 
	0x00, 0x00, 0xfe, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x07, 0xf0, 0x00, 
	0x00, 0x0f, 0xe0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0xff, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 
	0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '0', 30x40px
const unsigned char bitmap_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xc0, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0xf8, 0xf8, 0x00, 0x01, 0xf0, 0x7c, 0x00, 
	0x03, 0xf0, 0x7e, 0x00, 0x03, 0xf0, 0x7e, 0x00, 0x07, 0xf0, 0x7f, 0x00, 0x07, 0xf0, 0x7f, 0x00, 
	0x07, 0xf0, 0x7f, 0x00, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 
	0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xe0, 0x7f, 0x80, 
	0x0f, 0xe0, 0x7f, 0x80, 0x0f, 0xe0, 0x7f, 0x80, 0x0f, 0xe0, 0x7f, 0x80, 0x0f, 0xe0, 0x7f, 0x80, 
	0x0f, 0xe0, 0x7f, 0x80, 0x0f, 0xe0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 0x0f, 0xf0, 0x7f, 0x80, 
	0x07, 0xf0, 0x7f, 0x00, 0x07, 0xf0, 0x7f, 0x00, 0x07, 0xf0, 0x7f, 0x00, 0x03, 0xf0, 0x7e, 0x00, 
	0x03, 0xf0, 0x7e, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0x00, 0xf8, 0xf8, 0x00, 0x00, 0x7f, 0xf0, 0x00, 
	0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'colon', 8x40px
const unsigned char bitmap_colon [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f, 
	0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f, 
	0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1824)
const int bitmap_numbers_LEN = 11;
const unsigned char* bitmap_numbers[11] = {
	bitmap_0,
	bitmap_1,
	bitmap_2,
	bitmap_3,
	bitmap_4,
	bitmap_5,
	bitmap_6,
	bitmap_7,
	bitmap_8,
	bitmap_9,
	bitmap_colon
};


String zoneData[5] = { "", "", "", "", "" };

Display::Display() {}

void Display::init() {
  Wire.begin(I2C_SDA, I2C_SCL);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    return;
  }

  // Dim
  display.ssd1306_command(SSD1306_SETPRECHARGE);
  display.ssd1306_command(0xf1);
  display.ssd1306_command(SSD1306_SETVCOMDETECT);
  display.ssd1306_command(0x00);
  display.ssd1306_command(SSD1306_SETCONTRAST);
  display.ssd1306_command(0x00);

  // Clear and display logo
  display.clearDisplay();
  display.drawBitmap(0, 0, penguin_bitmap, LOGO_HEIGHT, LOGO_WIDTH, WHITE);
  display.display();
}

void Display::setString(int zone, String value) {
  if (zoneData[zone] != value) {
    zoneData[zone] = value;
    updateDisplay();
  }
}


void Display::updateDisplay() {
  display.clearDisplay();
  for (int x = 0; x < 5; x++) {
    switch (x) {
      case 0:
        display.drawBitmap(0,0,bitmap_numbers[zoneData[x][0] - 48],30,40,WHITE);
        display.drawBitmap(30,0,bitmap_numbers[zoneData[x][1] - 48],30,40,WHITE);
        display.drawBitmap(60,0,bitmap_colon,8,40,WHITE);
        display.drawBitmap(68,0,bitmap_numbers[zoneData[x][3] - 48],30,40,WHITE);
        display.drawBitmap(98,0,bitmap_numbers[zoneData[x][4] - 48],30,40,WHITE);
        break;
      case 1:
        display.setTextSize(1);
        display.setTextColor(WHITE);
        display.setCursor(0, 45);
        display.println(zoneData[x]);
        break;
      case 2:
        display.setTextSize(1);
        display.setTextColor(WHITE);
        display.setCursor(0, 55);
        display.println(zoneData[x]);
        break;
      case 3:
        display.setTextSize(1);
        display.setTextColor(WHITE);
        display.setCursor(110, 55);
        display.println(zoneData[x]);
        break;
      case 4:
        display.setTextSize(1);
        display.setTextColor(WHITE);
        display.setCursor(110, 45);
        display.println(zoneData[x]);
        break;
      default:
        break;
    }
  }
  display.display();
}
